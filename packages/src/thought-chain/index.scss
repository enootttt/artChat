@use 'sass:map';

@import '../theme/index';
@import '../theme/mixin';

$prefix: 'thought-chain' !default;
$prefix-item: 'thought-chain-item' !default;

$colors: (
  pending: var(--color-primary),
  success: var(--color-success),
  error: var(--color-error),
);

@mixin getArg($size, $font-size) {
  &-icon {
    width: $size;
    height: $size;
    font-size: $font-size;
  }

  &-extra {
    height: $size;
    max-height: $size;
  }

  &-title {
    height: $size;
    max-height: $size;
    font-size: $font-size;
    line-height: $size;
  }

  &-desc {
    font-size: $font-size;
  }
}

@include b($prefix) {
  display: flex;
  flex-direction: column;
  &#{&}-small {
    gap: 12px;
    padding-inline-start: 20px;

    @include b($prefix-item) {
      $component-prefix: &;

      @include getArg(20px, var(--font-size-sm));

      &-header {
        gap: 12px;
        margin-inline-start: -20px;
        margin-bottom: 12px;

        &::before {
          inset-inline-start: 9px;
          top: 20px;
          bottom: -24px;
        }
      }

      &-content {
        margin-inline-start: -20px;

        &::before {
          inset-inline-start: 9px;
          bottom: -12px;
        }
      }

      &-footer {
        margin-top: 12px;

        &::before {
          inset-inline-start: -11px;
          bottom: -12px;
        }
      }
    }
  }
  &#{&}-middle {
    gap: 16px;
    padding-inline-start: 28px;

    @include b($prefix-item) {
      $component-prefix: &;

      @include getArg(28px, var(--font-size));

      &-header {
        gap: 16px;
        margin-inline-start: -28px;
        margin-bottom: 16px;

        &::before {
          inset-inline-start: 13px;
          top: 28px;
          bottom: -32px;
        }
      }

      &-content {
        margin-inline-start: -28px;

        &::before {
          inset-inline-start: 13px;
          bottom: -16px;
        }
      }

      &-footer {
        margin-top: 16px;

        &::before {
          inset-inline-start: -15px;
          bottom: -16px;
        }
      }
    }
  }
  &#{&}-large {
    gap: 24px;
    padding-inline-start: 36px;

    @include b($prefix-item) {
      $component-prefix: &;

      @include getArg(36px, var(--font-size-lg));

      &-header {
        gap: 24px;
        margin-inline-start: -36px;
        margin-bottom: 24px;

        &::before {
          inset-inline-start: 17px;
          top: 36px;
          bottom: -48px;
        }
      }

      &-content {
        margin-inline-start: -36px;

        &::before {
          inset-inline-start: 17px;
          bottom: -24px;
        }
      }

      &-footer {
        margin-top: 24px;

        &::before {
          inset-inline-start: -19px;
          bottom: -24px;
        }
      }
    }
  }
}

@include b($prefix-item) {
  $component-prefix: &;

  @at-root {
    @each $key, $value in $colors {
      $statusColor: map-get($colors, $key);

      @each $nextStatus in map-keys($colors) {
        @include b(#{$prefix-item}-#{$key}-#{$nextStatus}) {
          #{$component-prefix}-icon,
          & > *::before {
            background-color: $statusColor;
          }

          & > :last-child::before {
            @if $key == $nextStatus {
              /** 无样式更改 */
            } @else {
              background: linear-gradient($statusColor, map-get($colors, $nextStatus));
              background-color: none !important;
            }
          }
        }
      }
    }
  }

  display: flex;
  flex-direction: column;
  align-items: flex-start;
  // 判断是否是最后一个元素
  &:last-child &-header:last-child {
    &::before {
      display: none;
    }
  }
  // 判断子元素是否包含 content
  &-title:has(&-collapse-icon) {
    cursor: pointer;
    user-select: none;
  }

  :has(&-content) {
    &:last-child {
      &-header {
        &::before {
          display: block;
        }
      }
    }
  }

  &-header {
    position: relative;
    display: flex;
    align-items: flex-start;
    width: 100%;

    &::before {
      position: absolute;
      inset-inline-end: none;
      z-index: 0;
      box-sizing: border-box;
      display: block;
      width: 2px;
      content: '';
      background-color: rgb(var(--light), 0.25);
    }

    #{$component-prefix}-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
    }

    &-box {
      display: flex;
      flex: 1;
      flex-direction: column;
      overflow: hidden;
      #{$component-prefix}-title {
        box-sizing: border-box;
        display: inline-block;
        max-width: 100%;
        color: rgb(var(--light), 0.88);
        overflow-wrap: break-word;
        white-space: normal;

        strong {
          display: flex;
          font-weight: 600;
          #{$component-prefix}-collapse-icon {
            margin-inline-end: 8px;

            &.rotate {
              transform: rotate(90deg);
            }
          }
        }
      }
      #{$component-prefix}-desc {
        box-sizing: border-box;
        display: inline-block;
        max-width: 100%;
        color: rgb(var(--light), 0.45);
        overflow-wrap: break-word;
        white-space: normal;
      }
    }
  }

  &-content {
    position: relative;
    width: 100%;
    margin-inline-start: -28px;

    &::before {
      position: absolute;
      inset-inline-end: none;
      top: 100%;
      box-sizing: border-box;
      display: block;
      width: 2px;
      content: '';
      background-color: rgb(var(--light), 0.25);
    }

    &-box {
      box-sizing: border-box;
      display: inline-block;
      width: 100%;
      padding: 16px;
      background-color: var(--color-bg-container);
      border: 1px solid var(--border-secondary);
      border-radius: 8px;
    }
  }

  &-footer {
    position: relative;
    display: inline-flex;
    width: calc(100% - 28px);

    &::before {
      position: absolute;
      inset-inline-end: none;
      top: 0;
      display: block;
      width: 2px;
      content: '';
      background-color: rgb(var(--light), 0.25);
    }
  }
}
